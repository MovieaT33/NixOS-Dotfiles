DISK      := "/dev/vda"
EFI_START := "1MiB"
EFI_END   := "513MiB"
ROOT_END  := "97%"
DATA_END  := "100%"

ROOT_PART := "/dev/vda2"
ROOT_NAME := "cryptroot"
DATA_PART := "/dev/vda3"
DATA_NAME := "secure_data"
ROOT_LUKS := "/dev/mapper/cryptroot"
DATA_LUKS := "/dev/mapper/secure_data"

ROOT_LVs := "nix:20G var:1G home:0.5G tmp:128M var_tmp:64M swap:1M root:100%FREE"
DATA_LVs := "secure:1G"
VG_ROOT  := "vg0"
VG_DATA  := "vg1"

EFI_PART := "/dev/vda1"

MNT_DIR := "/mnt"

# default: partition_disk setup_luks create_lvm create_logical_volumes format_efi format_logical_volumes mount_volumes enable_swap generate_nixos_config prompt_edit_config install_nixos cleanup
default: install_nixos cleanup

#
partition_disk:
    sudo parted --script {{DISK}} mklabel gpt

    sudo parted --script {{DISK}} mkpart ESP fat32 {{EFI_START}} {{EFI_END}}
    sudo parted --script {{DISK}} set 1 esp on

    sudo parted --script {{DISK}} mkpart primary {{EFI_END}} {{ROOT_END}}

    sudo parted --script {{DISK}} mkpart primary {{ROOT_END}} {{DATA_END}}

#
setup_luks:
    sudo cryptsetup luksFormat {{ROOT_PART}} --batch-mode
    sudo cryptsetup open {{ROOT_PART}} {{ROOT_NAME}}

    sudo cryptsetup luksFormat {{DATA_PART}} --batch-mode
    sudo cryptsetup open {{DATA_PART}} {{DATA_NAME}}

#
create_lvm:
    sudo pvcreate {{ROOT_LUKS}}
    sudo vgcreate {{VG_ROOT}} {{ROOT_LUKS}}

    sudo pvcreate {{DATA_LUKS}}
    sudo vgcreate {{VG_DATA}} {{DATA_LUKS}}

#
create_logical_volumes:
    sudo lvcreate -L 20G {{VG_ROOT}} -n nix
    sudo lvcreate -L 1G  {{VG_ROOT}} -n var
    sudo lvcreate -L 0.5G {{VG_ROOT}} -n home
    sudo lvcreate -L 128M {{VG_ROOT}} -n tmp
    sudo lvcreate -L 64M {{VG_ROOT}} -n var_tmp
    sudo lvcreate -L 1M {{VG_ROOT}} -n swap
    sudo lvcreate -l 100%FREE {{VG_ROOT}} -n root

    sudo lvcreate -L 1G {{VG_DATA}} -n secure

#
format_efi:
    sudo mkfs.fat -F 32 {{EFI_PART}}

#
format_logical_volumes:
    sudo mkfs.ext4 /dev/{{VG_ROOT}}/root
    sudo mkfs.ext4 /dev/{{VG_ROOT}}/nix
    sudo mkfs.ext4 /dev/{{VG_ROOT}}/var
    sudo mkfs.ext4 /dev/{{VG_ROOT}}/home
    sudo mkfs.ext4 /dev/{{VG_ROOT}}/tmp
    sudo mkfs.ext4 /dev/{{VG_ROOT}}/var_tmp
    sudo mkswap    /dev/{{VG_ROOT}}/swap

    sudo mkfs.ext4 /dev/{{VG_DATA}}/secure

#
mount_volumes:
    sudo mount /dev/{{VG_ROOT}}/root {{MNT_DIR}}

    sudo mkdir -p {{MNT_DIR}}/boot
    sudo mount {{EFI_PART}} {{MNT_DIR}}/boot

    sudo mkdir -p {{MNT_DIR}}/nix
    sudo mount /dev/{{VG_ROOT}}/nix {{MNT_DIR}}/nix

    sudo mkdir -p {{MNT_DIR}}/var
    sudo mount /dev/{{VG_ROOT}}/var {{MNT_DIR}}/var

    sudo mkdir -p {{MNT_DIR}}/home
    sudo mount /dev/{{VG_ROOT}}/home {{MNT_DIR}}/home

    sudo mkdir -p {{MNT_DIR}}/tmp
    sudo mount /dev/{{VG_ROOT}}/tmp {{MNT_DIR}}/tmp

    sudo mkdir -p {{MNT_DIR}}/var/tmp
    sudo mount /dev/{{VG_ROOT}}/var_tmp {{MNT_DIR}}/var/tmp

    sudo mkdir -p {{MNT_DIR}}/secure
    sudo mount /dev/{{VG_DATA}}/secure {{MNT_DIR}}/secure

#
enable_swap:
    sudo swapon /dev/{{VG_ROOT}}/swap

#
generate_nixos_config:
    sudo nixos-generate-config --root {{MNT_DIR}}

#
prompt_edit_config:
    @echo "Please update the NixOS config with the following:"
    @echo
    @echo 'boot.initrd.luks.devices."{{ROOT_NAME}}" = {'
    @echo '  device = "{{ROOT_PART}}";'
    @echo '  preLVM = true;'
    @echo '};'
    @echo
    @echo 'boot.initrd.luks.devices."{{DATA_NAME}}" = {'
    @echo '  device = "{{DATA_PART}}";'
    @echo '  preLVM = true;'
    @echo '};'
    @echo
    @echo 'swapDevices = [ { device = "/dev/{{VG_ROOT}}/swap"; } ];'
    @echo
    @read -p "Press Enter to open config in nano..." _
    sudo nano /mnt/etc/nixos/configuration.nix

#
install_nixos:
    sudo nixos-install

#
cleanup:
    swapoff /dev/{{VG_ROOT}}/swap
    umount -R /mnt
    vgchange -an {{VG_ROOT}}
    vgchange -an {{VG_DATA}}
    cryptsetup close {{ROOT_NAME}}
    cryptsetup close {{DATA_NAME}}
    read -p "Press Enter to reboot system..." _
    reboot
